# Stubs for networkx.algorithms.approximation.kcomponents (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ...classes.graph import Graph
from ...classes.reportviews import DegreeView
from collections import Mapping
from typing import Any, Iterator, Iterable

def k_components(G: Any, min_density: float = ...): ...

class _AntiGraph(Graph):
    all_edge_dict: Any = ...
    def single_edge_dict(self): ...
    edge_attr_dict_factory: Any = ...
    def __getitem__(self, n: Any): ...
    def neighbors(self, n: Any): ...
    class AntiAtlasView(Mapping):
        def __init__(self, graph: Any, node: Any) -> None: ...
        def __len__(self) -> int: ...
        def __iter__(self): ...
        def __getitem__(self, nbr: Any): ...
    class AntiAdjacencyView(AntiAtlasView):
        def __init__(self, graph: Any) -> None: ...
        def __len__(self) -> int: ...
        def __iter__(self): ...
        def __getitem__(self, node: Any): ...
    @property
    def adj(self): ...
    def subgraph(self, nodes: Any): ...
    class AntiDegreeView(DegreeView):
        def __iter__(self) -> Iterator: ...
        def __getitem__(self, n: Any): ...
    @property
    def degree(self): ...
    def adjacency(self) -> Iterable: ...
